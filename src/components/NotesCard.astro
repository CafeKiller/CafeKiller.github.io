---
import { formatDate } from '@utils/commonUtil'

import type { imageType, ImageBoxOpt } from "@type/common"

import '@styles/global.min.css'
import '@styles/notes.min.css'
import ImageBox from './ImageBox.astro'

const { frontmatter, url } = Astro.props
const imageList: imageType[] = Astro.props.frontmatter.images || [];
const options: ImageBoxOpt = {
   width: 360,
   height: 360,
   gap: 5,
}
---
<div class="md-wrapper">
    <section class="md-header">
        { 
            frontmatter.title != '' 
            ? <h1 class="md-title" id={frontmatter.title}> {frontmatter.title}</h1> 
            : '' 
        }
        <br>
        <span class="md-time">{ formatDate(frontmatter.pubDate).slice(0,10).replaceAll('-','.')}</span>
    </section>
    
    <section class="md-content">
        <slot />
        { 
            imageList.length 
            ? ( <ImageBox images={ imageList } options={ options } /> ) 
            : '' 
        }
    </section>

    <section class="md-footer">
        {
            frontmatter.tags.map((tag: string) => (
                <span># { tag }</span>
            ))
        }
        {
            frontmatter?.openComm 
            ? (<a href={`/notes/${url}`} class="go-note" target="_blank">前往话题 » </a>) 
            : ''
        }
    </section>
</div>

<style lang="scss">
    // markdown 布局样式
    .md-wrapper {
        margin-bottom: 26px;
        position: relative;
        padding: 30px 0 30px;
        .md-header {
            .md-title {
                display: inline-block;
                position: relative;
                font-weight: 400;
                font-size: 26px;
                color: var(--fontcolor1);
                text-shadow: 2px 2px 0 rgba(0, 0, 0, .15);
                &::before {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: unset;
                    right: 0;
                    width: 0;
                    height: 2px;
                    background-color: var(--main-color);
                    opacity: .35;
                    transition: all .7s ease;
                }
            }
            .md-time {
                display: block;
                margin: 10px 0;
                position: relative;
                font-size: 16px;
                font-weight: 400;
                line-height: 24px;
                letter-spacing: 1px;
                color: var(--fontcolor3);
            }
        }
        .md-content {
            padding: 0;
            p {
                text-indent: 32px;
            }
        }
        .md-footer {
            margin-top: 10px;
            span {
                margin-right: 14px;
                font-size: 14px;
                color: var(--main-color);
                border-radius: 16px;
            }
            .go-note {
                position: absolute;
                bottom: 30px;
                right: 10px;
                font-size: 14px;
                color: var(--fontcolor1);
                opacity: 0.5;
                transition: all .25s ease;
                &:hover {
                    transform: translateX(10px);
                    color: var(--main-color);
                    opacity: 1;
                }
            }
        }
        &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background-color: var(--main-color);
            z-index: 0;
            opacity: 0;
            transform: translate(-50%, -50%);
            transition: all .25s ease;
            pointer-events: none;
        }
        &:hover {
            .md-header {
                .md-title::before {
                    left: 0;
                    right: unset;
                    width: 100%;
                    opacity: 1;
                }
            }
            &::before {
                width: 108%;
                height: 100%;
                opacity: 0.05;
            }
        }
    }
    
    html.dark {
        .md-wrapper {
            .bottom-contr {
                .to-top {
                    .icon {
                        filter: invert(100%) sepia(7%) saturate(571%) hue-rotate(1deg) brightness(116%) contrast(87%);
                    }
                }
            }
        }
    }


    // 移动端or小屏适配
    @media screen and (max-width: 786px) {
        .md-wrapper {
            .md-header {
                .md-time {
                    &::before {
                        left: -22vw;
                        width: 20vw;
                    }
                    &::after {
                        right: -22vw;
                        width: 20vw;
                    }
                }
            }
            .md-footer {
                padding: 0 6px 0;
                .md-footer-cont {
                    padding: 10px 16px 10px;
                    flex-direction: column;  
                    div {
                        line-height: 28px;
                    }
                }
            }
            &:hover {
                &::before {
                    width: 106%;
                    height: 102%;
                    opacity: 0.05;
                }
            }
        }
    }
    @media screen and (max-width: 1400px) {
        .md-wrapper {
            .bottom-contr {
                .bottom-catalogs {
                    order: 1;
                    opacity: 0 !important;
                    pointer-events: none;
                }
            }
        }
    }
</style>