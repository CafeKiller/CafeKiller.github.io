---
import Header from '@components/Header.astro'
import Footer from '@components/Footer.astro'

import { SITE, LOCALE } from '@config'

import '@styles/global.min.css'

export interface Props {
	title?: string
	author?: string
	description?: string
	ogImage?: string
	canonicalURL?: string
	pubDatetime?: Date
	modDatetime?: Date | null
	scrollSmooth?: boolean
}

const { 
	title,
	description,
	author = SITE.author,
	ogImage = SITE.ogImage,
	canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
} = Astro.props
---

<!-- 基础外层 HTML 结构 -->
<!doctype html>
<html lang=`${ LOCALE.lang ?? "en" }`>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no">
		<meta name="format-detection" content="telephone=no"> 
		<meta name="mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="description" content={ description ? description : SITE.desc } />
		<meta name="generator" content={ Astro.generator } />
		<meta name="robots" content="all">
		
		<meta name="title" content={ title + SITE.title } />
		<meta name="author" content={ author } />
		<meta name="Copyright" content={ author }/>
		<link rel="sitemap" href="/sitemap-index.xml" />
		
		<meta property="og:title" content={ title + SITE.title}>
		<meta property="og:description" content={ description ? description : SITE.desc }>
		<meta property="og:image" content={ ogImage }>
		<meta property="image" content={ ogImage }>

		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={ canonicalURL } />
		<meta property="twitter:title" content={ title + SITE.title } />
		<meta property="twitter:description" content={ description ? description : SITE.desc } />
		<meta property="twitter:image" content={ ogImage } />
		
		<meta name="Description" content={ description ? description : SITE.desc }/>
		<meta name="Keywords" content="咖啡blog, 技术博客, 编程开发, 电脑技巧, 琐碎生活, 动漫, 游戏, Java, JavaScript, React, Go, cafe blog"/>
		
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

		<meta name="theme-color" content="" />
		
		<title>{ title + SITE.title }</title>

		<link 
			rel="shortcut icon" 
			href="https://testingcf.jsdelivr.net/gh/cafekiller/cafe.cdn/images/favicon.ico" 
			type="image/x-icon" 
			as="image">
		
		<link rel="stylesheet" href="/assets/css/message.min.css" as="style"/>

		<script src="/assets/js/toggleTheme.min.js" is:inline></script>
	</head>

	<body style="zoom: var(--zoom)">
		<div class="wrapper">
			<Header></Header>
			<slot />
		</div>
		<Footer/>
	</body>

</html>

<script>
	import { themeValue } from '@utils/themeUtil'
	import { iLog } from '@utils/iLogUtil'
	
	iLog.info("CurrentTime", new Date().toLocaleString("zh-CN", { hour12: false }))
	iLog.info("Copyright", "Coffee_Killer")	

	// const themeValue = localStorage.getItem("__cafe-blog_theme")
	iLog.info("The current user's topic preferences:", themeValue)

	const copyCodeText = (event: any) => {
        const codeElement = event.target.closest('.astro-code').querySelector('code');
        if (codeElement) {
            const codeText = codeElement.innerText;
            navigator.clipboard.writeText(codeText)
                .then(() => {
                    // console.log('代码已复制到剪贴板');
                    iLog.success("SUCCESS", '代码已复制到剪贴板');
                })
                .catch(err => {
                    // console.error('无法复制代码: ', err);
					iLog.error("ERROR", '无法复制代码', err);
                });
        }
    }

    const createCodeLanguageTag = () => {
        const allAstroCodeDom = document.querySelectorAll('.astro-code')

        allAstroCodeDom.forEach( (astroCodeDom) => {
            const codeDom = astroCodeDom.querySelector('code')
            const newParent = document.createElement('div');
            newParent.classList.add('code-wrapper');
            codeDom && newParent.appendChild(codeDom);
            astroCodeDom.appendChild(newParent)
            
            const codeLanguage = astroCodeDom.getAttribute('data-language')
            if (codeLanguage) {
                const _span = document.createElement('span')
                _span.classList.add('code-language')
                _span.innerText = codeLanguage
                _span.addEventListener('click', copyCodeText);
                _span.setAttribute('title', '点击复制代码');
                astroCodeDom.prepend(_span)
            }
        })
    }
    createCodeLanguageTag()
</script>