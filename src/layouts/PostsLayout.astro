---
import BaseLayout from "@layouts/BaseLayout.astro"
import Catalogs from "@components/Catalogs.astro"
import Comments from '@components/Comment'

import { formatDate } from '@utils/dateUtil'

import '@styles/global.min.css'

const { frontmatter , headings} = Astro.props
---



<BaseLayout 
    title={frontmatter.title} 
    description={ frontmatter.description }>

    <div class="progress-content" id="md-progress">
        <div class="progress-bar" id="md-progress-bar" style="width: 0%;"></div>
    </div>
    

    <div class="md-wrapper">

        <section class="md-header">
            <h1 class="md-title"> {frontmatter.title}</h1>
            <p class="md-time">{ formatDate(frontmatter.pubDate).slice(0,10)}</p>
    
            { frontmatter.image.url ? <img src={frontmatter.image.url} height="150" alt={frontmatter.image.alt} /> : '' }
    
            <Catalogs headings={ headings }/>
        </section>
    
        
        <section class="md-content">
            <p><em>{frontmatter.description}</em></p>
            <slot />
            <!-- <p>Written by: {frontmatter.author}</p> -->
    
            <!-- <Catalogs  headings={ headings }/> -->
            
        </section>
    
        <section class="md-footer">
            <div class="md-footer-cont">
                <div>Written by: {frontmatter.author}</div>
                <div>
                    归类于
                    {
                        frontmatter.tags.map((tag:string) => {
                            return (<a href={'/tags/' + tag} target="_blank">{ tag }</a>)
                        })
                    }
                    相关
                </div>
            </div>
        </section>

        <!-- <div class="md-comment">
            <Comments client:only="react" />
        </div> -->

        <div class="bottom-contr">
            <a href="javascript:toTop();" class="to-top">
                <svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4257" width="200" height="200">
                    <path d="M512.454303 298.931677l422.502218 424.319432-180.812777 0 0 300.748891-484.287489 0-0.908607-300.748891-178.086957 0zM994.924579 0l0 120.84472-965.849157 0 0-120.84472 965.849157 0z" p-id="4258" fill="#000000"></path>
                </svg>
            </a>
            <div class="bottom-catalogs">
                <Catalogs headings={ headings }/>
            </div>
        </div>


    </div>

</BaseLayout>



<script is:inline>
    const updateScrollProgress = () => {
        if (document) {
            const mdBar = document.getElementById("md-progress-bar")
            if (mdBar) {
                const winScroll = document.body.scrollTop || document.documentElement.scrollTop
                const height = document.documentElement.scrollHeight - document.documentElement.clientHeight
                const scrolled = (winScroll / height) * 100
                mdBar.style.width = scrolled + "%"
            }
        }
    }
    document.addEventListener('scroll', updateScrollProgress)

    const createCodeLanguageTag = () => {
        const allCodeDom = document.querySelectorAll('.astro-code')
        allCodeDom.forEach( (codeDom) => {
            const codeLanguage = codeDom.getAttribute('data-language')
            if (codeLanguage) {
                const _span = document.createElement('span')
                _span.classList.add('code-language')
                _span.innerText = codeLanguage
                codeDom.prepend(_span)
            }
        })
    }
    createCodeLanguageTag()

    const createATagJump = () => {
        const cont = document.querySelector('.md-content')
        const allATag = cont.querySelectorAll('a')
        allATag.forEach( (aTag) => {
            aTag.setAttribute('target', '_blank')
        })
    }
    createATagJump()

    const updateToTopBtn = () => {
        const toTopBtn = document.querySelector('.to-top')
        if (toTopBtn) {
            if (document.documentElement.scrollTop > 500) {
                document.querySelector('.to-top').classList.add('show')
                document.querySelector('.bottom-catalogs').classList.add('show')
            } else {
                document.querySelector('.to-top').classList.remove('show')
                document.querySelector('.bottom-catalogs').classList.remove('show')
            }
        }
    }
    document.addEventListener('scroll', updateToTopBtn)

    const toTop = () => {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        })
    }

</script>
</script>

<style lang="scss">
    .progress-content {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 5px;
        z-index: 1000;
        .progress-bar {
            height: 5px;
            background-color: var(--main-color);
        }
    }

    // markdown 布局样式
    .md-wrapper {
        position: relative;
        padding: 0 0 40px;
        // markdown 文档首部
        .md-header { 
            .md-time {
                position: relative;
                padding-left: 12px;
                font-size: 14px;
                line-height: 24px;
                letter-spacing: 1px;
                color: var(--fontcolor3);
                &::before {
                    content: '';
                    position: absolute;
                    left: 0;
                    top: 2px;
                    height: 20px;
                    width: 3px;
                    background-color:var(--fontcolor3);
                }
            }
            .md-title {
                font-size: 38px;
                color: var(--fontcolor1);
                text-shadow: 2px 2px 0 rgba(0, 0, 0, .15);
            }
            img {
                margin: 10px 0 0;
                display: block;
                height: 150px;
            }
        }

        // markdown 文档底部
        .md-footer {
            padding: 0 0 0;
            position: absolute;
            left: 50%;
            bottom: 28px;
            width: 100%;
            transform: translateX(-50%);
            box-sizing: border-box;
            .md-footer-cont {
                display: flex;
                justify-content: space-between;
                align-items: center;
                width: 100%;
                padding: 0 16px 0;
                border-left: 3px solid var(--fontcolor3);
                border-right: 3px solid var(--fontcolor3);
                background-color: var(--body-bgcolor);
                box-sizing: border-box;
                div {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    text-indent: 0;
                    font-size: 14px;
                    line-height: 36px;
                    color: var(--fontcolor2);
                    vertical-align: middle;
                    flex-wrap: wrap;
                    a {
                        margin: 0 6px;
                        font-size: 14px;
                        color: var(--main-color);
                        text-decoration: underline;
                    }
                }
            }

        }

        .bottom-contr {
            position: fixed;
            right: 10px;
            bottom: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 100;
            .to-top {
                order: 2;
                margin-right: 10px;
                align-self: flex-end;
                display: flex;
                justify-content: center;
                align-items: center;
                width: 30px;
                height: 30px;
                border-radius: 3px;
                background-color: var(--blackf);
                box-shadow: 0 1px 4px rgba(0, 0, 0, .3);
                opacity: 0;
                transition: all .1s ease;
                pointer-events: none;
                .icon {
                    width: 16px;
                    height: 16px;
                    filter: invert(0%) sepia(0%) saturate(7471%) hue-rotate(258deg) brightness(90%) contrast(108%);
                    transition: all .2s ease;
                    &:hover {
                        filter: invert(77%) sepia(39%) saturate(6102%) hue-rotate(334deg) brightness(98%) contrast(106%);;
                    }
                }
                &.show {
                    opacity: 1;
                    pointer-events: all;
                }
            }
            .bottom-catalogs {
                align-self: flex-end;
                order: 3;
                transition: all .25s ease;
                opacity: 0;
                pointer-events: none;
                &.show {
                    opacity: 1;
                    pointer-events: all;
                }
            }
        }
        
    }

    .md-comment {
        padding: 0 0 48px;
    }
    
    html.dark {
        .md-wrapper {
            .bottom-contr {
                .to-top {
                    .icon {
                        filter: invert(100%) sepia(7%) saturate(571%) hue-rotate(1deg) brightness(116%) contrast(87%);
                    }
                }
            }
        }
    }


    // 移动端or小屏适配
    @media screen and (max-width: 786px) {
        .md-wrapper {
            padding: 0 4px 90px;
            .md-header {
                padding: 0 6px;
            }
            .md-footer {
                padding: 0 4px 0;
                .md-footer-cont {
                    padding: 10px 16px 10px;
                    flex-direction: column;  
                    div {
                        line-height: 28px;
                    }
                }
            }
        }
    }
    @media screen and (max-width: 1400px) {
        .md-wrapper {
            .bottom-contr {
                .bottom-catalogs {
                    order: 1;
                    opacity: 0 !important;
                    pointer-events: none;
                }
            }
        }
    }
</style>