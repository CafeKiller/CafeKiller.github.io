---
import BaseLayout from '../../layouts/BaseLayout.astro'

export async function getStaticPaths(): Promise<any[]> {
  
    const createAllMd = async () => {
        let _array:Array<any> = []

        return _array.concat(await Astro.glob('../posts/*.md'))
                    .concat(await Astro.glob('../games/*.md'))
                    .concat(await Astro.glob('../articles/*.md'))
    }
    // 获取所有 .md 文章对象
    const allPosts: Array<any> = await createAllMd()

    // 过滤文章对象中的 tag (不重复) 转换为数组
    const uniqueTags: Array<string> = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
    

    // 通过 tag 过滤出相关 .md 文章集合
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params
const { posts } = Astro.props 
---
<BaseLayout title={ tag }>
    <p>包含「{tag}」标签的文章</p>
    <ul>
        <!-- 渲染 过滤后的文章集合 信息 -->
        { posts.map( (post) => {
                return (
                    <li>
                        <a href="javascript:;" >{post.frontmatter.title}</a>
                    </li>
                )
            })}
    </ul>
</BaseLayout>